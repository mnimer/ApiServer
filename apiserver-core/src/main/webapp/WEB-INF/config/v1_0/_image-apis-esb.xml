<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:si="http://www.springframework.org/schema/integration"
	   xmlns:http="http://www.springframework.org/schema/integration/http"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd ">



	<!-- CHANNELS -->
	<si:channel id="analyticsChannel"/>

	<!-- we'll use this when we are going to use the modifications to the Message payload by reference, instead of pulling the message back out of the output channel -->
	<si:channel id="noOpOutputChannel"/>


	<!-- todo -->
	<si:channel id="imageCacheDeleteInputChannel"/>


	<!-- INTERCEPTORS -->
	<bean id="tokenAccessInterceptor" class="apiserver.apis.v1_0.common.interceptors.TokenAccessInterceptor"/>


	<!-- ROUTERS -->




	<!-- SERVICES -->
	<bean id="noOpService" class="apiserver.apis.v1_0.common.NoOpService"/>



	<!-- Special Channel adapter to collect analytics
	<si:outbound-channel-adapter
		channel="analyticsChannel" >
		<bean class="apiserver.apis.v1_0.common.messageHandlers.TokenAnalyticsCollector"/>
	</si:outbound-channel-adapter>
	-->


	<!-- simple no operation method to finish the chain, we'll pull the data by reference out of hte payload directly. -->
	<si:service-activator
			input-channel="noOpOutputChannel"
			ref="noOpService"
			method="noOpHandler"/>






    <!-- ***************************************
    *** FLOWS
    *************************************** -->

	<!--
		CACHE ADD
	 -->
	<import resource="flows/cache/cacheAdd-flow.xml"/>


	<!--
		CACHE GET
	 -->
	<import resource="flows/cache/cacheGet-flow.xml"/>


	<!--
		CACHE DELETE
    -->
	<import resource="flows/cache/cacheDelete-flow.xml"/>



    <!--
        GENERATE CAPTCHA
    -->
    <import resource="flows/image/captchaInputChannel-flow.xml"/>


    <!--
		Resize Image
	-->
    <import resource="flows/image/imageSizeInputChannel-flow.xml"/>


	<!--
		Image Size Info
	-->
	<import resource="flows/image/imageResize-flow.xml"/>



	<!--
		Image Embedded Metadata
		Note: because of the router, this is not in a CHAIN
	-->
    <import resource="flows/image/imageMetadata-flow.xml"/>


	<!--
		Image ROTATE
	-->
	<import resource="flows/image/imageRotate-flow.xml"/>


	<!--
		Image RESIZE
	-->
	<import resource="flows/image/imageResize-flow.xml"/>


	<!--
		Image ADD Border
	-->
	<import resource="flows/image/imageDrawBorder-flow.xml"/>


	<!--
		Image Draw text (watermark) on image
	-->
	<import resource="flows/image/imageDrawText-flow.xml"/>



    <!--
        IMAGE FILTER Flows
    -->
    <import resource="flows/image-filters/filterBoxBlur-flow.xml"/>
    <import resource="flows/image-filters/filterBlur-flow.xml"/>
    <import resource="flows/image-filters/filterBump-flow.xml"/>
    <import resource="flows/image-filters/filterDespeckle-flow.xml"/>
    <import resource="flows/image-filters/filterGaussian-flow.xml"/>
    <import resource="flows/image-filters/filterGlow-flow.xml"/>
    <import resource="flows/image-filters/filterGrayScale-flow.xml"/>
    <import resource="flows/image-filters/filterLensBlur-flow.xml"/>
    <import resource="flows/image-filters/filterMask-flow.xml"/>
    <import resource="flows/image-filters/filterMaximum-flow.xml"/>
    <import resource="flows/image-filters/filterMedian-flow.xml"/>
    <import resource="flows/image-filters/filterMinimum-flow.xml"/>
    <import resource="flows/image-filters/filterMotionBlur-flow.xml"/>
    <import resource="flows/image-filters/filterOil-flow.xml"/>

</beans>



