<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:ctx="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:si="http://www.springframework.org/schema/integration"
	   xmlns:http="http://www.springframework.org/schema/integration/http"
	   xmlns:oxm="http://www.springframework.org/schema/oxm"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd">



	<!-- CHANNELS -->
	<si:channel id="analyticsChannel"/>

	<!-- we'll use this when we are going to use the modifications to the Message payload by reference, instead of pulling the message back out of the output channel -->
	<si:channel id="noOpOutputChannel"/>


	<!-- todo -->
	<si:channel id="imageCacheDeleteInputChannel"/>


	<!-- INTERCEPTORS -->
	<bean id="tokenAccessInterceptor" class="apiserver.apis.v1_0.common.interceptors.TokenAccessInterceptor"/>


	<!-- ROUTERS -->


	<!-- SERVICES -->
	<bean id="noOpService" class="apiserver.apis.v1_0.common.NoOpService"/>



	<!-- Special Channel adapter to collect analytics
	<si:outbound-channel-adapter
		channel="analyticsChannel" >
		<bean class="apiserver.apis.v1_0.common.messageHandlers.TokenAnalyticsCollector"/>
	</si:outbound-channel-adapter>
	-->


	<!-- simple no operation method to finish the chain, we'll pull the data by reference out of hte payload directly. -->
	<si:service-activator
			input-channel="noOpOutputChannel"
			ref="noOpService"
			method="noOpHandler"/>


	<!--
		GENERATE CAPTCHA
	-->
	<si:channel id="captchaInputChannel"/>
	<si:chain input-channel="captchaInputChannel" output-channel="noOpOutputChannel">

		<si:service-activator
			method="generateCaptchaHandler">
			<bean class="apiserver.apis.v1_0.images.service.coldfusion.CaptchaCFService"/>
		</si:service-activator>

	</si:chain>


	<!--
		CACHE ADD
	 -->
	<si:channel id="imageCacheAddInputChannel"/>
	<si:chain input-channel="imageCacheAddInputChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="addToCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

	</si:chain>


	<!--
		CACHE GET
	 -->
	<si:channel id="imageCacheGetInputChannel"/>
	<si:chain input-channel="imageCacheGetInputChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="getFromCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

	</si:chain>


	<!--
		CACHE DELETE

	<si:chain input-channel="imageCacheDeleteInputChannel" output-channel="imageCacheDeleteOutputChannel">

		<si:service-activator
				method="addToCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

	</si:chain> -->




	<!--
		Image Size Info
	-->
	<si:channel id="imageSizeInputChannel"/>
	<si:chain input-channel="imageSizeInputChannel" output-channel="noOpOutputChannel">

		<si:service-activator
			method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="imageSizeHandler">
			<bean class="apiserver.apis.v1_0.images.service.coldfusion.ImageSizeService"/>
		</si:service-activator>

	</si:chain>



	<!--
		Image Embedded Metadata
		Note: because of the router, this is not in a CHAIN
	-->
	<si:channel id="imageMetadataInputChannel"/>
	<si:channel id="metadataInfoRouter"/>

	<!-- these channels MUST match the ImageConfigMBean.getMetadataLibrary() options -->
	<si:channel id="drewMetadataExtractor"/>
	<si:channel id="exifTool"/>


		<si:service-activator
				input-channel="imageMetadataInputChannel"
				output-channel="metadataInfoRouter"
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:router
				input-channel="metadataInfoRouter"
				method="route">
			<bean class="apiserver.apis.v1_0.images.routers.MetadataRouter"/>
		</si:router>


			<si:service-activator
					input-channel="drewMetadataExtractor"
					output-channel="noOpOutputChannel"
					method="imageMetadataHandler">
				<bean class="apiserver.apis.v1_0.images.service.drewMetadata.ImageMetadataService"/>
			</si:service-activator>

			<si:service-activator
					input-channel="exifTool"
					output-channel="noOpOutputChannel"
					method="metadataInfo">
				<bean class="apiserver.apis.v1_0.images.service.exiftool.ImageMetadataService"/>
			</si:service-activator>





	<!--
		Image ROTATE
	-->
	<si:channel id="imageRotateInputChannel"/>
	<si:chain input-channel="imageRotateInputChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="imageRotateHandler">
			<bean class="apiserver.apis.v1_0.images.service.coldfusion.ImageManipulationCFService"/>
		</si:service-activator>

	</si:chain>




	<!--
		Image RESIZE
	-->
	<si:channel id="imageResizeInputChannel"/>
	<si:chain input-channel="imageResizeInputChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="imageResizeHandler">
			<bean class="apiserver.apis.v1_0.images.service.coldfusion.ImageManipulationCFService"/>
		</si:service-activator>

	</si:chain>




	<!--
		Image ADD Border
	-->
	<si:channel id="imageDrawBorderInputChannel"/>
	<si:chain input-channel="imageDrawBorderInputChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="imageBorderHandler">
			<bean class="apiserver.apis.v1_0.images.service.coldfusion.ImageDrawingCFService"/>
		</si:service-activator>

	</si:chain>




	<!--
		Image Draw text (watermark) on image
	-->
	<si:channel id="imageDrawTextInputChannel"/>
	<si:chain input-channel="imageDrawTextInputChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="imageDrawTextHandler">
			<bean class="apiserver.apis.v1_0.images.service.coldfusion.ImageDrawingCFService"/>
		</si:service-activator>

	</si:chain>






	<si:channel id="imageBoxBlurFilterChannel"/>
	<si:chain input-channel="imageBoxBlurFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.BoxBlurFilterService"/>
		</si:service-activator>

	</si:chain>



	<si:channel id="imageBlurFilterChannel"/>
	<si:chain input-channel="imageBlurFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.BlurFilterService"/>
		</si:service-activator>

	</si:chain>



	<si:channel id="imageBumpFilterChannel"/>
	<si:chain input-channel="imageBumpFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.BumpFilterService"/>
		</si:service-activator>

	</si:chain>



	<si:channel id="imageDespeckleFilterChannel"/>
	<si:chain input-channel="imageDespeckleFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.DespeckleFilterService"/>
		</si:service-activator>

	</si:chain>



	<si:channel id="imageGaussianFilterChannel"/>
	<si:chain input-channel="imageGaussianFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.GaussianFilterService"/>
		</si:service-activator>

	</si:chain>



	<si:channel id="imageGlowFilterChannel"/>
	<si:chain input-channel="imageGlowFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.GlowFilterService"/>
		</si:service-activator>

	</si:chain>



	<si:channel id="imageGrayScaleFilterChannel"/>
	<si:chain input-channel="imageGrayScaleFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.GrayScaleFilterService"/>
		</si:service-activator>

	</si:chain>



	<si:channel id="imageLensBlurFilterChannel"/>
	<si:chain input-channel="imageLensBlurFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.LensBlurFilterService"/>
		</si:service-activator>

	</si:chain>



	<si:channel id="imageMaskFilterChannel"/>
	<si:chain input-channel="imageMaskFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.ApplyMaskFilterService"/>
		</si:service-activator>

	</si:chain>


	<si:channel id="imageMaximumFilterChannel"/>
	<si:chain input-channel="imageMaximumFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.MaximumFilterService"/>
		</si:service-activator>

	</si:chain>


	<si:channel id="imageMedianFilterChannel"/>
	<si:chain input-channel="imageMedianFilterChannel" output-channel="noOpOutputChannel">

		<si:service-activator
				method="checkCache">
			<bean class="apiserver.apis.v1_0.images.service.cache.ImageCacheService"/>
		</si:service-activator>

		<si:service-activator
				method="doFilter">
			<bean class="apiserver.apis.v1_0.images.service.jhlabs.MedianFilterService"/>
		</si:service-activator>

	</si:chain>
</beans>



