<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>apiserver-core</groupId>
	<artifactId>apiserver-core</artifactId>
	<name>apiserver-core Application</name>
	<version>0.1.0</version>
	<packaging>war</packaging>


	<properties>
		<java-version>1.7</java-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<spring.version>3.1.2.RELEASE</spring.version>
		<spring-integration.version>2.1.0.RELEASE</spring-integration.version>

		<!-- path to extracted war file -->
		<cfusion.war>../resources/ColdFusion10/cfusion.war</cfusion.war>
		<extracted.cfusion.war>../resources/ColdFusion10/cfusion</extracted.cfusion.war>
	</properties>



	<dependencies>
		<!--
			 * Add ColdFusion jars to your local repository
			   todo this: run this command (edit the <path(s)> first)
			mvn install:install-file -Dfile=/<local path>/ColdFusion10/cfusion/WEB-INF/cfusion/lib/cfusion.jar -DgroupId=com.adobe -DartifactId=ColdFusion -Dversion=10 -Dpackaging=jar -DlocalRepositoryPath=/Users/<username>/.m2/repository/
			   -->
		<dependency>
			<groupId>com.adobe</groupId>
			<artifactId>ColdFusion</artifactId>
			<scope>provided</scope>
			<version>10</version>

			<!-- alternative (have not tested)
			   <scope>system</scope>
        		<systemPath>${project.basedir}/...../cfusion.jar</systemPath>
			-->
		</dependency>

		<dependency>
			<groupId>com.mikenimer</groupId>
			<artifactId>Palladium</artifactId>
			<version>1.0.75</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.0</version>
		</dependency>


		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.7.2</version>
		</dependency>

		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.10.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xmlParserAPIs</artifactId>
			<version>2.6.2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.2.1</version>
		</dependency>

		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.7</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-parent</artifactId>
			<version>26</version>
		</dependency>


		<!--dependency>
			<groupId>com.mangofactory</groupId>
			<artifactId>swagger-springmvc</artifactId>
			<version>0.2.2</version>
		</dependency-->






		<!--
		 Dependencies for IMAGE Metadata
		-->
		<dependency>
			<groupId>com.drewnoakes</groupId>
			<artifactId>metadata-extractor</artifactId>
			<version>2.6.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-imaging</artifactId>
			<version>1.1-SNAPSHOT</version>
		</dependency>


		<!--
		 Dependencies for SWAGGER code
		-->
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-core_2.9.1</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-annotations_2.9.1</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>0.10.8</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>11.0.1</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0-rc1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>


		<!--
		   Caching Libraries
		-->
		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
			<version>0.5</version>
		</dependency>

		<dependency>
			<groupId>javax.cache.implementation</groupId>
			<artifactId>cache-annotations-ri-spring</artifactId>
			<version>0.4</version>
		</dependency>


		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.5.0</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-jcache</artifactId>
			<version>1.4.0-beta1</version>
		</dependency>

		<!--
		  <dependency>
			  <groupId>net.sf.ehcache</groupId>
			  <artifactId>ehcache-jmsreplication</artifactId>
			  <version>0.4</version>
		  </dependency>
		  <dependency>
			  <groupId>net.sf.ehcache</groupId>
			  <artifactId>ehcache-core</artifactId>
			  <version>2.6.0</version>
		  </dependency>
		  <dependency>
			  <groupId>net.sf.ehcache</groupId>
			  <artifactId>ehcache-terracotta</artifactId>
			  <version>2.6.0</version>
		  </dependency>
		  <dependency>
			  <groupId>net.sf.ehcache</groupId>
			  <artifactId>ehcache-web</artifactId>
			  <version>2.0.4</version>
		  </dependency>
		  -->


		<!--
		   Jackson JSON
		-->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.9</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.9</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>1.9.9</version>
		</dependency>


		<!--
			SPRING FRAMEWORK
		-->
		<!--
			  Core utilities used by other modules.
			  Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
		  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-asm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			Bean Factory and JavaBeans utilities (depends on spring-core)
			Define this if you use Spring Bean APIs (org.springframework.beans.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
			Define this if you use Spring AOP APIs (org.springframework.aop.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
			This is the central artifact for Spring's Dependency Injection Container and is generally always defined
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
			Define this if you need any of these integrations
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!--
			Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
			Define this if you use Spring Transactions or DAO Exception Hierarchy
			(org.springframework.transaction.*/org.springframework.dao.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
			Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
			(depends on spring-core, spring-beans, spring-context, spring-tx)
			Define this if you need ORM (org.springframework.orm.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
			(depends on spring-core, spring-beans, spring-context)
			Define this if you need OXM (org.springframework.oxm.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			Web application development utilities applicable to both Servlet and Portlet Environments
			(depends on spring-core, spring-beans, spring-context)
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
			Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--
			Support for testing Spring applications with tools such as JUnit and TestNG
			This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>


		<!--
			SPRING SECURITY
		-->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.version}</version>
		</dependency>


		<!--
			SPRING INTEGRATION
		-->
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-jms</artifactId>
			<version>${spring-integration.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-jmx</artifactId>
			<version>${spring-integration.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-core</artifactId>
			<version>${spring-integration.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-xml</artifactId>
			<version>${spring-integration.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-security</artifactId>
			<version>${spring-integration.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-http</artifactId>
			<version>${spring-integration.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-event</artifactId>
			<version>${spring-integration.version}</version>
		</dependency>







		<!--
		TEST DEPENDENCIES
	 	-->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>7.0.26</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
			<version>3.7.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>




	</dependencies>


	<repositories>
		<repository>
			<id>repository.springframework.maven.release</id>
			<name>Spring Framework Maven Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</repository>
		<repository>
			<id>repository.springframework.maven.milestone</id>
			<name>Spring Framework Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</repository>
		<repository>
			<id>repository.springframework.maven.snapshot</id>
			<name>Spring Framework Maven Snapshot Repository</name>
			<url>http://maven.springframework.org/snapshot</url>
		</repository>
		<repository>
			<id>apache.snapshots</id>
			<name>Apache Development Snapshot Repository</name>
			<url>https://repository.apache.org/snapshots</url>
		</repository>

	</repositories>


	<!-- see http://felix.apache.org/site/maven-bundle-plugin-bnd.html for more info -->
	<build>
		<finalName>apiserver-core-${project.version}</finalName>

		<plugins>

			<plugin>
				<groupId>org.zeroturnaround</groupId>
				<artifactId>jrebel-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-rebel-xml</id>
						<phase>process-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!--
				Unzip cfusion.war
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>prepare</id>
						<phase>prepare-package</phase>
						<configuration>
							<target>
								<echo message="extract cfusion WAR"/>
								<!--unzip src="${cfusion.war}" dest="${extracted.cfusion.war}/" /-->
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<!--archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>sky
					</archive-->
					<webResources>
						<resource>
							<directory>${extracted.cfusion.war}</directory>
							<includes>
								<include>**</include>
							</includes>
							<excludes>
								<exlude>**/web.xml</exlude>
								<!-- we are already including a newer version in the dependencys above -->
								<exlude>**/cfusion/lib/metadata-extractor-*.jar</exlude>
							</excludes>
						</resource>
					</webResources>
				</configuration>
			</plugin>



			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!--plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.2</version>
			</plugin-->



			<!--
				TODO : debug this. right now tomcat starts and stops before the integration test can run.

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12.3</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<fork>true</fork>
					<warSourceDirectory>${project.build.directory}/apiserver-core-${project.version}</warSourceDirectory>
					<systemProperties>
							<JAVA_OPTS>-Xms1024m -Xmx4096m -XX:MaxPermSize=1024m -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled</JAVA_OPTS>
					</systemProperties>
				</configuration>
				<executions>
					<execution>
						<id>run-tomcat</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			 -->
		</plugins>
	</build>

</project>